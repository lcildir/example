"use strict";
exports.__esModule = true;
var nanoid_1 = require("nanoid");
var BaseConnector = /** @class */ (function () {
    function BaseConnector(app, configOptions, id) {
        this.app = app;
        this.id = id || nanoid_1.nanoid();
        this.eventConfigurations = {};
        this.started = false;
        this.configOptions = configOptions;
        app.register(this);
    }
    BaseConnector.prototype.updateOptions = function (configOptions) {
        // Override this method if you need to do something specific on update configOptions
        this.configOptions = configOptions;
    };
    BaseConnector.prototype.removeEvent = function (event) {
        delete this.eventConfigurations[event.id];
        this.onRemoveEvent(event);
    };
    BaseConnector.prototype.onRemoveEvent = function (event) {
        // Override this method if you need to do something specific on remove events
    };
    BaseConnector.prototype.start = function () {
        if (!this.started) {
            this.onStart();
        }
        this.started = true;
    };
    BaseConnector.prototype.onStart = function () {
        // Override this method if you need to do something specific on start
    };
    BaseConnector.prototype.on = function (options, handler, eventId) {
        console.log('The on method is not implemented for this connector');
        return null;
    };
    BaseConnector.prototype.stop = function () {
        this.started = false;
        this.onStop();
    };
    BaseConnector.prototype.onStop = function () {
        // Override this method if you need to do something specific on stop
    };
    return BaseConnector;
}());
exports["default"] = BaseConnector;
//# sourceMappingURL=BaseConnector.js.map