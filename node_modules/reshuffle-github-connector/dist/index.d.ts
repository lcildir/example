import { Reshuffle, EventConfiguration, BaseHttpConnector } from 'reshuffle-base-connector';
import { Octokit } from '@octokit/rest';
import type { Request, Response } from 'express';
declare type OctokitOptions = NonNullable<ConstructorParameters<typeof Octokit>[0]>;
export declare type GithubEvent = 'check_run' | 'check_suite' | 'commit_comment' | 'content_reference' | 'create' | 'delete' | 'deploy_key' | 'deployment' | 'deployment_status' | 'fork' | 'github_app_authorization' | 'gollum' | 'installation' | 'installation_repositories' | 'issue_comment' | 'issues' | 'label' | 'marketplace_purchase' | 'member' | 'membership' | 'meta' | 'milestone' | 'organization' | 'org_block' | 'package' | 'page_build' | 'ping' | 'project_card' | 'project_column' | 'project' | 'public' | 'pull_request' | 'pull_request_review' | 'pull_request_review_comment' | 'push' | 'release' | 'repository_dispatch' | 'repository' | 'repository_import' | 'repository_vulnerability_alert' | 'security_advisory' | 'sponsorship' | 'star' | 'status' | 'team' | 'team_add' | 'watch';
export interface GitHubConnectorConfigOptions extends OctokitOptions {
    secret?: string;
    webhookPath?: string;
    runtimeBaseUrl?: string;
    token?: string;
}
export interface GitHubConnectorEventOptions {
    owner: string;
    repo: string;
    githubEvent: GithubEvent;
}
export default class GitHubConnector extends BaseHttpConnector<GitHubConnectorConfigOptions, GitHubConnectorEventOptions> {
    private _sdk;
    constructor(app: Reshuffle, options: GitHubConnectorConfigOptions, id?: string);
    onStart(): Promise<void>;
    on(options: GitHubConnectorEventOptions, handler: (event: EventConfiguration & Record<string, any>, app: Reshuffle) => void, eventId: string): EventConfiguration;
    handle(req: Request, res: Response): Promise<boolean>;
    sdk(): Octokit;
}
export { GitHubConnector };
